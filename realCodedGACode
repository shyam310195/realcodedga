function varargout = untitled1(varargin)
% UNTITLED1 MATLAB code for untitled1.fig
%      UNTITLED1, by itself, creates a new UNTITLED1 or raises the existing
%      singleton*.
%
%      H = UNTITLED1 returns the handle to a new UNTITLED1 or the handle to
%      the existing singleton*.
%
%      UNTITLED1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in UNTITLED1.M with the given input arguments.
%
%      UNTITLED1('Property','Value',...) creates a new UNTITLED1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before untitled1_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to untitled1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help untitled1

% Last Modified by GUIDE v2.5 28-Sep-2015 15:04:46

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @untitled1_OpeningFcn, ...
                   'gui_OutputFcn',  @untitled1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before untitled1 is made visible.
function untitled1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to untitled1 (see VARARGIN)

% Choose default command line output for untitled1
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes untitled1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = untitled1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;



function maximizeFunction_Callback(hObject, eventdata, handles)
% hObject    handle to maximizeFunction (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of maximizeFunction as text
%        str2double(get(hObject,'String')) returns contents of maximizeFunction as a double


% --- Executes during object creation, after setting all properties.
function maximizeFunction_CreateFcn(hObject, eventdata, handles)
% hObject    handle to maximizeFunction (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function xmin_Callback(hObject, eventdata, handles)
% hObject    handle to xmin (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of xmin as text
%        str2double(get(hObject,'String')) returns contents of xmin as a double


% --- Executes during object creation, after setting all properties.
function xmin_CreateFcn(hObject, eventdata, handles)
% hObject    handle to xmin (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit3_Callback(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit3 as text
%        str2double(get(hObject,'String')) returns contents of edit3 as a double


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function populationSize_Callback(hObject, eventdata, handles)
% hObject    handle to populationSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of populationSize as text
%        str2double(get(hObject,'String')) returns contents of populationSize as a double


% --- Executes during object creation, after setting all properties.
function populationSize_CreateFcn(hObject, eventdata, handles)
% hObject    handle to populationSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function numGeneration_Callback(hObject, eventdata, handles)
% hObject    handle to numGeneration (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of numGeneration as text
%        str2double(get(hObject,'String')) returns contents of numGeneration as a double


% --- Executes during object creation, after setting all properties.
function numGeneration_CreateFcn(hObject, eventdata, handles)
% hObject    handle to numGeneration (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in reproductionProportionate.
function reproductionProportionate_Callback(hObject, eventdata, handles)
% hObject    handle to reproductionProportionate (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(handles.reproductionProportionate,'Value') == 1
    set(handles.reproductionRanking,'Enable','off')
    set(handles.reproductionTournament,'Enable','off')
else
    set(handles.reproductionRanking,'Enable','on')
    set(handles.reproductionTournament,'Enable','on')
end
% Hint: get(hObject,'Value') returns toggle state of reproductionProportionate


% --- Executes on button press in reproductionRanking.
function reproductionRanking_Callback(hObject, eventdata, handles)
% hObject    handle to reproductionRanking (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(handles.reproductionRanking,'Value') == 1
    set(handles.reproductionProportionate,'Enable','off')
    set(handles.reproductionTournament,'Enable','off')
else
    set(handles.reproductionProportionate,'Enable','on')
    set(handles.reproductionTournament,'Enable','on')
end
% Hint: get(hObject,'Value') returns toggle state of reproductionRanking


% --- Executes on button press in reproductionTournament.
function reproductionTournament_Callback(hObject, eventdata, handles)
% hObject    handle to reproductionTournament (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(handles.reproductionTournament,'Value') == 1
    set(handles.reproductionProportionate,'Enable','off')
    set(handles.reproductionRanking,'Enable','off')
    set(handles.reproductionTournamentSize,'Enable','on')
else
    set(handles.reproductionProportionate,'Enable','on')
    set(handles.reproductionRanking,'Enable','on')
    set(handles.reproductionTournamentSize,'Enable','off')
end
% Hint: get(hObject,'Value') returns toggle state of reproductionTournament


% --- Executes on button press in elitism.
function elitism_Callback(hObject, eventdata, handles)
% hObject    handle to elitism (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of elitism


% --- Executes on button press in crossLinear.
function crossLinear_Callback(hObject, eventdata, handles)
% hObject    handle to crossLinear (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(handles.crossLinear,'Value') == 1
    set(handles.crossBlend,'Enable','off')
    set(handles.crossBlendAlpha,'Enable','off')
else
    set(handles.crossBlend,'Enable','on')
end
% Hint: get(hObject,'Value') returns toggle state of crossLinear


% --- Executes on button press in crossBlend.
function crossBlend_Callback(hObject, eventdata, handles)
% hObject    handle to crossBlend (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(handles.crossBlend,'Value') == 1
    set(handles.crossLinear,'Enable','off')
    set(handles.crossBlendAlpha,'Enable','on')
else 
    set(handles.crossBlendAlpha,'Enable','off')
    set(handles.crossLinear,'Enable','on')
end
% Hint: get(hObject,'Value') returns toggle state of crossBlend



function crossBlendAlpha_Callback(hObject, eventdata, handles)
% hObject    handle to crossBlendAlpha (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of crossBlendAlpha as text
%        str2double(get(hObject,'String')) returns contents of crossBlendAlpha as a double


% --- Executes during object creation, after setting all properties.
function crossBlendAlpha_CreateFcn(hObject, eventdata, handles)
% hObject    handle to crossBlendAlpha (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end





function crossSBXqval_Callback(hObject, eventdata, handles)
% hObject    handle to crossSBXqval (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of crossSBXqval as text
%        str2double(get(hObject,'String')) returns contents of crossSBXqval as a double


% --- Executes during object creation, after setting all properties.
function crossSBXqval_CreateFcn(hObject, eventdata, handles)
% hObject    handle to crossSBXqval (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in mutationRandom.
function mutationRandom_Callback(hObject, eventdata, handles)
% hObject    handle to mutationRandom (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if get(handles.mutationRandom,'Value') == 1
    set(handles.mutationPoly,'Enable','off')
    set(handles.mutationRandomDelta,'Enable','on')
    
else
    set(handles.mutationPoly,'Enable','on')
    set(handles.mutationRandomDelta,'Enable','off')
    
end
% Hint: get(hObject,'Value') returns toggle state of mutationRandom


% --- Executes on button press in mutationPoly.
function mutationPoly_Callback(hObject, eventdata, handles)
% hObject    handle to mutationPoly (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

if get(handles.mutationPoly,'Value') == 1
    set(handles.mutationRandom,'Enable','off')    
    set(handles.mutationPolyDelta,'Enable','on')
    set(handles.mutationPolyQVal,'Enable','on')
else
    set(handles.mutationRandom,'Enable','on')
    set(handles.mutationPolyDelta,'Enable','off')
    set(handles.mutationPolyQVal,'Enable','off')    
end
    
    
% Hint: get(hObject,'Value') returns toggle state of mutationPoly



function probabCross_Callback(hObject, eventdata, handles)
% hObject    handle to probabCross (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of probabCross as text
%        str2double(get(hObject,'String')) returns contents of probabCross as a double


% --- Executes during object creation, after setting all properties.
function probabCross_CreateFcn(hObject, eventdata, handles)
% hObject    handle to probabCross (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function probabMutation_Callback(hObject, eventdata, handles)
% hObject    handle to probabMutation (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of probabMutation as text
%        str2double(get(hObject,'String')) returns contents of probabMutation as a double


% --- Executes during object creation, after setting all properties.
function probabMutation_CreateFcn(hObject, eventdata, handles)
% hObject    handle to probabMutation (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function mutationRandomDelta_Callback(hObject, eventdata, handles)
% hObject    handle to mutationRandomDelta (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of mutationRandomDelta as text
%        str2double(get(hObject,'String')) returns contents of mutationRandomDelta as a double


% --- Executes during object creation, after setting all properties.
function mutationRandomDelta_CreateFcn(hObject, eventdata, handles)
% hObject    handle to mutationRandomDelta (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function mutationPolyDelta_Callback(hObject, eventdata, handles)
% hObject    handle to mutationPolyDelta (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of mutationPolyDelta as text
%        str2double(get(hObject,'String')) returns contents of mutationPolyDelta as a double


% --- Executes during object creation, after setting all properties.
function mutationPolyDelta_CreateFcn(hObject, eventdata, handles)
% hObject    handle to mutationPolyDelta (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function mutationPolyQVal_Callback(hObject, eventdata, handles)
% hObject    handle to mutationPolyQVal (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of mutationPolyQVal as text
%        str2double(get(hObject,'String')) returns contents of mutationPolyQVal as a double


% --- Executes during object creation, after setting all properties.
function mutationPolyQVal_CreateFcn(hObject, eventdata, handles)
% hObject    handle to mutationPolyQVal (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
close all
clc
clear workspace


% --- Executes on button press in run.
function run_Callback(hObject, eventdata, handles)
% hObject    handle to run (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
myfunction = get(handles.maximizeFunction, 'String');
myfunction = sym(myfunction);
xmin = str2double(get(handles.xmin, 'String'));
xmax = str2double(get(handles.xmax, 'String'));
N = str2double(get(handles.populationSize, 'String'));
pm = str2double(get(handles.probabMutation, 'String'));
pc = str2double(get(handles.probabCross, 'String'));
numGeneration = str2double(get(handles.numGeneration, 'String'));
population = initialpopulation(N,xmin,xmax);

for i = 1:1:numGeneration
    stop_state = get(handles.pushbutton1, 'Value');
    if stop_state
        break;
    end
    display(i,'generation number')
    data = fitnessfunction(myfunction,population,N, handles);
    matingPool = reproduction(data,N, handles);
    nextgen = crossover(matingPool,pc,N,xmax,xmin,myfunction, handles);
    mutnextgen = mutation(nextgen,pm,N, handles);
    elitenextgen = elite(data,mutnextgen,N, handles);
    population = elitenextgen;
    
end


function xmax_Callback(hObject, eventdata, handles)
% hObject    handle to xmax (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of xmax as text
%        str2double(get(hObject,'String')) returns contents of xmax as a double


% --- Executes during object creation, after setting all properties.
function xmax_CreateFcn(hObject, eventdata, handles)
% hObject    handle to xmax (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit15_Callback(hObject, eventdata, handles)
% hObject    handle to edit15 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit15 as text
%        str2double(get(hObject,'String')) returns contents of edit15 as a double


% --- Executes during object creation, after setting all properties.
function edit15_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit15 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit16_Callback(hObject, eventdata, handles)
% hObject    handle to edit16 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit16 as text
%        str2double(get(hObject,'String')) returns contents of edit16 as a double


% --- Executes during object creation, after setting all properties.
function edit16_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit16 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --------------------------------------------------------------------
function Untitled_1_Callback(hObject, eventdata, handles)
% hObject    handle to Untitled_1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

function population = initialpopulation(N,xmin,xmax, handles)
population = zeros(N,1);
for i = 1:1:N
    population(i) = xmin+rand*(xmax-xmin);    
end

function data = fitnessfunction(myfunction,population,N, handles)
fitness = zeros(N,1);
syms x;
for i = 1:1:N
    fitness(i) = subs(myfunction, x, population(i));
end
sumFit = sum(fitness);
[maxFit,ind] = max(fitness);
bestSol = population(ind);
display(bestSol,'best solution')
display(maxFit,'max Fitness')
probab = fitness/sumFit;
data = [population fitness probab];
dataSort = sortrows(data,3);
data = dataSort;

function matingPool = reproduction(data,N, handles)
matingPool = zeros(N,1);
xmin = str2double(get(handles.xmin, 'String'));
xmax = str2double(get(handles.xmax, 'String'));
N = str2double(get(handles.populationSize, 'String'));
% proportionate reproduction code
if get(handles.reproductionProportionate,'Value') == 1
    data(1,4) = data(1,3);
    for i = 2:1:N
        data(i,4) = data(i-1,4) + data(i,3);
    end
    for i = 1:1:N
        r = rand;
        for j = 1:1:N
            if r<data(j,4)
                matingPool(i,1) = data(j,1);
                break
            end
        end
    end
    
% ranking reproduction code
elseif get(handles.reproductionRanking,'Value') == 1
    sumProbab = sum(1:1:N);    
    for i = 1:1:N
        data(i,3) = i/sumProbab;
    end
    data(1,4) = data(1,3);
    for i = 2:1:N
        data(i,4) = data(i-1,4) + data(i,3);
    end
    for i = 1:1:N
        r = rand;
        for j = 1:1:N
            if r<data(j,4)
                matingPool(i,1) = data(j,1);
                break
            end
        end
    end
   
% tournament selection code %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif get(handles.reproductionTournament,'Value') == 1
    size = str2double(get(handles.reproductionTournamentSize,'String'));    
    for i = 1:1:N        
        r = floor(rand(1,size)*N) + 1;        
        [maxval,ind] = max(data(r,2));
        ind = r(ind);
        matingPool(i,1) = data(ind,1);        
    end
end

    
    
function nextgen = crossover(matingPool,pc,N,xmax,xmin,y, handles)
xmin = str2double(get(handles.xmin, 'String'));
xmax = str2double(get(handles.xmax, 'String'));
N = str2double(get(handles.populationSize, 'String'));
nextgen = zeros(N,1);
syms x;
if get(handles.crossLinear,'Value') == 1
     for i = 1:2:N
        r = rand;
        if(r < pc)
            child1 = .5*(matingPool(i,1)) + .5*(matingPool(i+1,1));
            child2 = 1.5*(matingPool(i,1)) - .5*(matingPool(i+1,1));
            child3 = -.5*(matingPool(i,1)) + 1.5*(matingPool(i+1,1));
            
            if child1> xmax || child1 < xmin
                child1 = matingPool(i,1);
            end
            if child2> xmax || child2 < xmin
                child2 = matingPool(i+1,1);
            end
            if child3> xmax || child3 < xmin
                child3 = matingPool(i,1);
            end
            fitness1 = subs(y, x,child1);
            fitness2 = subs(y, x,child2);
            fitness3 = subs(y, x,child3);
            
            children = [child1 fitness1;child2 fitness2;child3 fitness3];
            children = sortrows(children,2);
            
            nextgen(i,1) = children(2,1);
            nextgen(i+1,1) = children(3,1);
        else
            nextgen(i,1) = matingPool(i,1);
            nextgen(i+1,1) = matingPool(i+1,1);
        end
     end
elseif get(handles.crossBlend,'Value') == 1
    for i = 1:2:N
        r = rand;
        if(r < pc)
            s = rand;
            alpha = str2double(get(handles.crossBlendAlpha,'String'));
            gamma = (1+2*alpha)*s - alpha;
            child1 = (1-gamma)* matingPool(i) + gamma* matingPool(i+1);
            child2 = (1-gamma)* matingPool(i+1) + gamma* matingPool(i);
            if child1> xmax || child1 < xmin
                child1 = matingPool(i,1);
            end
            if child2> xmax || child2 < xmin
                child2 = matingPool(i+1,1);
            end
            nextgen(i,1) = child1;
            nextgen(i+1,1) = child2;            
        else
            nextgen(i,1) = matingPool(i,1);
            nextgen(i+1,1) = matingPool(i+1,1);
        end
    end
    
end

function mutnextgen = mutation(nextgen,pm,N, handles)
xmin = str2double(get(handles.xmin, 'String'));
xmax = str2double(get(handles.xmax, 'String'));
N = str2double(get(handles.populationSize, 'String'));

if get(handles.mutationRandom,'Value') == 1
    pmax = str2double(get(handles.mutationRandomDelta,'String'));
    for i = 1:1:N
        r = rand;
        s = rand;
        if r<pm
            nextgen(i) =  nextgen(i) + (s-0.5)*pmax;
            if nextgen(i)> xmax || nextgen(i) < xmin
                nextgen(i) =  nextgen(i) - (s-0.5)*pmax;
            end
        end
    end
    
elseif get(handles.mutationPoly,'Value') == 1
    for i = 1:1:N
        r = rand;
        s = rand;
        pmax = str2double(get(handles.mutationPolyDelta,'String'));
        qExponent = str2double(get(handles.mutationPolyQVal,'String'));
        if r<pm
            if s<.5
                delta = (2*r)^(1/(qExponent+1)) - 1;
            else
                delta = 1 - (2*(1-r))^(1/(qExponent+1));
            end
            
            nextgen(i) =  nextgen(i) + delta*pmax;
            if nextgen(i)> xmax || nextgen(i) < xmin
                nextgen(i) =  nextgen(i) - delta*pmax;
            end
        end
    end
end
mutnextgen = nextgen;


function elitenextgen = elite(data,mutnextgen,N, handles);
elitenextgen = mutnextgen;
if get(handles.elitism,'Value') == 1
    elitenextgen(N) = data(N,1);
end

    



function reproductionTournamentSize_Callback(hObject, eventdata, handles)
% hObject    handle to reproductionTournamentSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of reproductionTournamentSize as text
%        str2double(get(hObject,'String')) returns contents of reproductionTournamentSize as a double


% --- Executes during object creation, after setting all properties.
function reproductionTournamentSize_CreateFcn(hObject, eventdata, handles)
% hObject    handle to reproductionTournamentSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
